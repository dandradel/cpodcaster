// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Episode renders Episode 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="MuiBox-root css-y6c8j4"
        data-testid="episode-wrapper-testid"
      >
        <h5
          class="MuiTypography-root MuiTypography-h5 MuiTypography-gutterBottom css-h93ljk-MuiTypography-root"
          data-testid="episode-name-testid"
        >
          Episode 1
        </h5>
        <h6
          class="MuiTypography-root MuiTypography-subtitle2 MuiTypography-gutterBottom css-kr9wzm-MuiTypography-root"
          data-testid="episode-description-testid"
        >
          Description 1
        </h6>
        <hr
          class="MuiDivider-root MuiDivider-fullWidth css-1sjh9xo-MuiDivider-root"
        />
        <audio
          controls=""
          data-testid="audio-podcast-testid"
          style="width: 100%; margin-top: 1rem;"
        >
          <source
            src="https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3"
            type="string/string"
          />
        </audio>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="MuiBox-root css-y6c8j4"
      data-testid="episode-wrapper-testid"
    >
      <h5
        class="MuiTypography-root MuiTypography-h5 MuiTypography-gutterBottom css-h93ljk-MuiTypography-root"
        data-testid="episode-name-testid"
      >
        Episode 1
      </h5>
      <h6
        class="MuiTypography-root MuiTypography-subtitle2 MuiTypography-gutterBottom css-kr9wzm-MuiTypography-root"
        data-testid="episode-description-testid"
      >
        Description 1
      </h6>
      <hr
        class="MuiDivider-root MuiDivider-fullWidth css-1sjh9xo-MuiDivider-root"
      />
      <audio
        controls=""
        data-testid="audio-podcast-testid"
        style="width: 100%; margin-top: 1rem;"
      >
        <source
          src="https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3"
          type="string/string"
        />
      </audio>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;
